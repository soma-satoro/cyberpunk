# Generated by Django 4.2.20 on 2025-05-02 00:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cyberpunk_sheets", "0002_initial"),
        ("inventory", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Hardware",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("cost", models.IntegerField(default=0)),
                ("slots", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NetArchitecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("difficulty", models.IntegerField(default=1)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlayerICE",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("per", models.IntegerField(default=0)),
                ("spd", models.IntegerField(default=0)),
                ("atk", models.IntegerField(default=0)),
                ("dfv", models.IntegerField(default=0)),
                ("rez", models.IntegerField(default=0)),
                ("effect", models.TextField(blank=True, default="")),
                ("cost", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Unnamed Program", max_length=255)),
                ("atk", models.IntegerField(default=0)),
                ("dfv", models.IntegerField(default=0)),
                ("rez", models.IntegerField(default=0)),
                ("effect", models.TextField(blank=True, default="")),
                ("cost", models.IntegerField(default=0)),
                ("icon", models.CharField(blank=True, default="", max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("level", models.IntegerField(default=1)),
                ("is_ice", models.BooleanField(default=False)),
                ("ice_type", models.CharField(blank=True, max_length=50, null=True)),
                ("ice_strength", models.IntegerField(default=0)),
                (
                    "architecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nodes",
                        to="netrunning.netarchitecture",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NetrunSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "architecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="netrunning.netarchitecture",
                    ),
                ),
                (
                    "current_node",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="netrunning.node",
                    ),
                ),
                (
                    "netrunner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="netrun_sessions",
                        to="cyberpunk_sheets.charactersheet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cyberdeck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("hardware_slots", models.IntegerField(default=0)),
                ("program_slots", models.IntegerField(default=0)),
                ("any_slots", models.IntegerField(default=0)),
                ("value", models.IntegerField(default=0)),
                (
                    "cyberdeck_gear",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cyberdeck",
                        to="inventory.cyberdeck",
                    ),
                ),
                (
                    "cyberware",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cyberdeck",
                        to="inventory.cyberwareinstance",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cyberdecks",
                        to="cyberpunk_sheets.charactersheet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
